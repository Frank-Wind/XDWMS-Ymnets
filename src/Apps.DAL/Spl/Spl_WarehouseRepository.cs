//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using Apps.Models;
using Apps.Models.Spl;
using Apps.IDAL.Spl;
using System;
using System.Linq;
using Apps.Models.Sys;
using System.Data.SqlClient;

namespace Apps.DAL.Spl
{
	public partial class Spl_WarehouseRepository
	{
        public IQueryable<SysRole> GetRefSysRole(string id)
        {
            if (!string.IsNullOrEmpty(id))
            {
                return from m in Context.Spl_Warehouse
                       from f in m.SysRole
                       where m.Id == id
                       select f;
            }
            return null;
        }

        public IQueryable<GetRoleByUserIdResultModel> GetRoleByUserId(string userId)
        {
            string sql = @"select a.*,ISNULL(b.Spl_WarehouseId,0) as flag from SysRole a left join
	                        SysRoleSpl_Warehouse b 
	                        on a.Id = b.SysRoleId
	                        and b.Spl_WarehouseId = @UserId
	                        order by b.Spl_WarehouseId desc";
            SqlParameter[] para = new SqlParameter[]
            {
                 new SqlParameter("@UserId",userId),

            };
            return Context.Database.SqlQuery<GetRoleByUserIdResultModel>(sql, para).AsQueryable();
        }

        public void UpdateSysRoleSpl_Warehouse(string userId, string[] roleIds)
        {
            //更新角色用户中间关系表,前删除关联
            string sql = "delete SysRoleSpl_Warehouse where Spl_WarehouseId='" + userId + "';";
            foreach (string roleid in roleIds)
            {
                if (!string.IsNullOrWhiteSpace(roleid))
                {
                    sql = sql + "insert into SysRoleSpl_Warehouse(SysRoleId,Spl_WarehouseId) values('" + roleid + "', '" + userId + "');";
                }
            }
            Context.Database.ExecuteSqlCommand(sql);
        }
    }
}
