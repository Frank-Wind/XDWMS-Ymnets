//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using Apps.Models;
using Apps.Models.Spl;
using Apps.IDAL.Spl;
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;

namespace Apps.DAL.Spl
{
	public partial class Spl_WareStockPileRepository
	{
        public IQueryable<Spl_WreStockPileListModel> GetPileList(string wareDetailsId,string warehouseId)
        {
            string strSql = @"select '入库' Type,c.Name,c.Code,a.WareDetailsId,a.WarehouseId,a.Price,a.Quantity,b.InTime ExecTime from dbo.Spl_WarehouseWarrantDetails a 
join dbo.Spl_WarehouseWarrant b on a.WarehouseWarrantId = b.Id
join dbo.Spl_WareDetails c on a.WareDetailsId = c.id
where b.State = 1 and a.WareDetailsId =@wareDetailsId and a.WarehouseId = @warehouseId
union all
select '出库' Type,c.Name,c.Code,a.WareDetailsId,a.WarehouseId,a.Price,a.Quantity,b.OutTime ExecTime from dbo.Spl_WarehouseWarrantDetailsOUT a
join dbo.Spl_WarehouseWarrantOUT b on a.WarehouseWarrantId = b.Id
join dbo.Spl_WareDetails c on a.WareDetailsId = c.id
where b.State = 1 and a.WareDetailsId = @wareDetailsId and a.WarehouseId = @warehouseId
union all
select '盘点' Type,b.Name,b.Code,a.WareDetailsId,a.WarehouseId,a.Price,a.DiffQuantity,a.CreateTime ExecTime from dbo.Spl_WareCheckTotal a
join dbo.Spl_WareDetails b on a.WareDetailsId = b.id
where a.State = 1 and a.WareDetailsId = @wareDetailsId and a.WarehouseId = @warehouseId
union all
select '调拨' Type,c.Name,c.Code,a.WareDetailsId,a.WarehouseId,a.Price,a.Quantity,b.InTime ExecTime from dbo.Spl_WarehouseAllocationDetails a
join dbo.Spl_WarehouseAllocation b on a.WarehouseAllocationId = b.Id
join dbo.Spl_WareDetails c on a.WareDetailsId = c.id
where b.State = 1 and a.WareDetailsId = @wareDetailsId and a.WarehouseId = @warehouseId
";

            SqlParameter[] para = new SqlParameter[]
            {
                new SqlParameter("@wareDetailsId",wareDetailsId),
                new SqlParameter("@warehouseId",warehouseId)
            };

            return Context.Database.SqlQuery<Spl_WreStockPileListModel>(strSql,para).AsQueryable();
        }

        public IQueryable<Spl_WareStockReportModel> GetWareStockList(string warehouseId)//, DateTime begin, DateTime end
        {
            string strSql = @"
select c.Name CategoryName,b.Name,b.Code,b.Size,b.Brand,b.Unit,b.Vender,b.SalePrice,b.WareCategoryId,a.Quantity nowQuantity,
b.LowerLimit,a.Quantity,b.Material,Quantity*b.SalePrice as QuantityTotal
 from Spl_WareStockPile a 
join dbo.Spl_WareDetails b on a.wareDetailsId = b.id 
join dbo.Spl_WareCategory c on b.warecategoryid= c.Id
where  a.WarehouseId = @warehouseId order by b.WareCategoryId";

            SqlParameter[] para = new SqlParameter[]
            {
                new SqlParameter("@warehouseId",warehouseId),
                //new SqlParameter("@begin",begin),
                //new SqlParameter("@end",end)
                // and a.CreateTime >=@begin and a.CreateTime<=@end 
            };

            return Context.Database.SqlQuery<Spl_WareStockReportModel>(strSql, para).AsQueryable();
        }
//        public IQueryable<Spl_WareStockReportModel> GetListview(string WarehouseId, int Quantity, int WaringQuantity)//修改于2018年3月7
//        {
//            string strSql = @"
//select c.Name CategoryName,b.Name,b.Code,b.Size,b.Brand,b.Unit,b.Vender,b.SalePrice,b.WareCategoryId,a.Quantity nowQuantity,
//b.LowerLimit,a.Quantity,b.Material,Quantity*b.SalePrice as QuantityTotal
// from Spl_WareStockPile a 
//join dbo.Spl_WareDetails b on a.wareDetailsId = b.id 
//join dbo.Spl_WareCategory c on b.warecategoryid= c.Id
//where  a.WarehouseId = @warehouseId  and a.Quantity >=@Quantity and a.WaringQuantity<=@WaringQuantity order by b.WareCategoryId";

//            SqlParameter[] para = new SqlParameter[]
//            {
//                new SqlParameter("@warehouseId",WarehouseId),
//                new SqlParameter("@Quantity",Quantity),
//                new SqlParameter("@WaringQuantity",WaringQuantity)
//            };

//            return Context.Database.SqlQuery<Spl_WareStockReportModel>(strSql, para).AsQueryable();
//        }
    }
}
